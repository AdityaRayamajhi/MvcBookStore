@model IEnumerable<MvcBookStore.Models.Book>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


@*A Direct way of creating helper wherever is needed...............*@
@helper Truncate(string input,int length)
{
    if (input.Length > length)
         {
            @input.Substring(0,length) <text>.....</text>
         }
}



<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.BookName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Genre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Writer)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ImagePath)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
             @Truncate(item.BookName,12)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Genre.Genre)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Writer.Writer)
        </td>
        <td>
         <img src="@Url.Content(string.Format("/Images/{0}.jpg", item.ImagePath))" alt="wrong Imagepath" height="50" width="50" />
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.BookId }) |
            @Html.ActionLink("Details", "Details", new { id=item.BookId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.BookId })
            @Ajax.ActionLink("ParDelete", "_Delete", new { id = item.BookId }, new AjaxOptions { Confirm = "Are You Sure to delete this?", HttpMethod = "Get" })

        </td>
    </tr>
}

</table>
